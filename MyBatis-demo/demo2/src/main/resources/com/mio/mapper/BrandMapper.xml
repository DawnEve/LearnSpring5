<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mio.mapper.BrandMapper">
    <!-- statement 语句 -->

    <!-- 数据库字段名 和 pojo 属性名不一致，数据不能自动封装
        * 方案1：使用别名，让别名和 pojo 属性名一致：每次查询都要写一次，重复
        * 方案2：使用sql片段，就是把重复的部分定义到一个标签内，下次引用。这可能导致一堆sql片段，不灵活
        * 方案3：resultMap，最常用的方案
    <sql id="brand_column">
        id, brand_name as brandName, company_name as companyName, ordered, description, status
    </sql>

    <select id="selectAll" resultType="brand">
        select
            <include refid="brand_column"></include>
        from tb_brand;
    </select>
     -->

    <!-- 步骤：1.定义resultMap标签，2.在select查询标签中使用resultMap属性替换resultType
        id: 唯一标示
        type: 原来select标签的 resultType，支持别名
    -->
    <resultMap id="brandResultMap" type="brand">
        <!-- 完成映射 column 表的字段名，property 实体类的属性名
            id: 完成主键字段的映射
            result: 一般字段的映射
        -->
        <result column="brand_name" property="brandName"></result>
        <result column="company_name" property="companyName"></result>
    </resultMap>

    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>


<!--    <select id="selectById" resultType="brand">-->
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand where id=#{id};
    </select>
</mapper>